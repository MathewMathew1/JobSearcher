@using JobSearcher.JobOpening
@model JobSearcher.JobOpening.JobOpeningSearcherModel
@{
    ViewData["Title"] = "Jobs search";
}


<div class="container py-5">
    <div class="text-center mb-5">
        <h1 class="fw-bold display-5 text-primary">Job Searcher</h1>
        <p class="text-muted">Find your next opportunity faster</p>
    </div>

    <div class="accordion shadow-sm rounded-3" id="jobSearchAccordion">
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingSearch">
                <button class="accordion-button collapsed fw-semibold" type="button"
                        data-bs-toggle="collapse" data-bs-target="#JobSearchModel"
                        aria-expanded="false" aria-controls="JobSearchModel">
                    Job Search
                </button>
            </h2>
            <div id="JobSearchModel" class="accordion-collapse collapse" aria-labelledby="headingSearch">
                <div class="accordion-body bg-light">
                    <form id="jobSearchForm" asp-controller="Job" asp-action="SearchJobs" method="get" class="row g-3">
                        <div class="col-md-4">
                            <label asp-for="Site" class="form-label fw-semibold"></label>
                            <select asp-for="Site" class="form-select" id="siteSelect">
                                @foreach (var site in Enum.GetValues(typeof(Site)))
                                {
                                    <option value="@site">@site</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label asp-for="JobSearched" class="form-label fw-semibold"></label>
                            <input asp-for="JobSearched" class="form-control" placeholder="Software Engineer, Designer..." />
                            <span asp-validation-for="JobSearched" class="text-danger small"></span>
                        </div>
                        <div class="col-md-4">
                            <label asp-for="Location" class="form-label fw-semibold"></label>
                            <input asp-for="Location" class="form-control" placeholder="City, Country" />
                            <span asp-validation-for="Location" class="text-danger small"></span>
                        </div>

                        <div class="col-md-4 d-none" id="countryCodeDiv">
                            <label asp-for="CountryCode" class="form-label fw-semibold">Country Code</label>
                            <input type="text" class="form-control" name="CountryCode" asp-for="CountryCode"
                                   placeholder="e.g. US, UK" required />
                        </div>

                        <div class="col-12">
                            <div id="jobSearchError" class="alert alert-danger mt-2" style="display:none;"></div>
                        </div>
                        <div class="col-12 d-flex justify-content-end">
                            <button type="submit" class="btn btn-primary px-4">
                                <i class="bi bi-search"></i> Search
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="mt-5">
        <h2 class="fw-bold mb-3">Job Openings</h2>
        <ul id="jobSearchResults" class="list-group list-group-flush shadow-sm rounded-3 job-search-container"></ul>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            $(document).on('submit', '#jobSearchForm', function (e) {
                e.preventDefault();
                var $form = $(this);

                if (!$form.valid()) return false;

                var url = $form.attr('action');
                $('#jobSearchError').hide();

                $.get(url, $form.serialize(), function (html) {
                    $('#jobSearchResults').html(html);
                }).fail(function (xhr) {
                    var $errorDiv = $('#jobSearchError');
                    $errorDiv.empty().show();
                    if (xhr.status === 400 && xhr.responseJSON) {
                        var messages = [];
                        for (var key in xhr.responseJSON) {
                            messages = messages.concat(xhr.responseJSON[key]);
                        }
                        $errorDiv.html(messages.join('<br>'));
                    } else {
                        $errorDiv.text('Unexpected error fetching jobs.');
                    }
                });
            });
        });
        $(function () {
            function toggleCountryCode() {
                var selected = $('#siteSelect').val();
                console.log(selected)
                if (selected === 'Indeed') {
                    $('#countryCodeDiv').removeClass('d-none');
                } else {
                    $('#countryCodeDiv').addClass('d-none');
                }
            }

            toggleCountryCode();
            $('#siteSelect').on('change', toggleCountryCode);
        });
    </script>
}