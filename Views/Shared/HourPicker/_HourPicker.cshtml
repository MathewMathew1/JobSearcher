@using JobSearcher.Report
@model List<ReportTime>

<div class="mt-4" id="report-times-container">
    <div class="p-3 text-center">
        <h4>Select the hours you want to receive reports</h4>
    </div>
    <div id="hours-grid" class="d-grid gap-1 p-3 hour-grid" >
        @for (int h = 0; h < 24; h++)
        {
            var isSelected = Model?.Any(t => t.LocalTime.Hours == h) ?? false;
            <button type="button" class="btn hour-btn @(isSelected ? "btn-primary" : "btn-outline-secondary")"
                data-hour="@h">
                @($"{h:00}:00")
            </button>
        }
    </div>
    <div class="p-3">
        <div id="too-many-alert" class="alert alert-danger d-none">
            You can select at most 2 hours.
        </div>
        <button id="save-times-btn" class="btn btn-success mt-3">Save Report Times</button>
    </div>
</div>

<script>
    $(function () {
        const maxSelected = 2;

        function updateSelectionState() {
            const selected = $('#hours-grid .hour-btn.btn-primary').length;
            if (selected > maxSelected) {
                $('#too-many-alert').removeClass('d-none');
                $('#save-times-btn').prop('disabled', true);
            } else {
                $('#too-many-alert').addClass('d-none');
                $('#save-times-btn').prop('disabled', false);
            }
        }

        $('#hours-grid').on('click', '.hour-btn', function () {
            $(this).toggleClass('btn-outline-secondary btn-primary');
            updateSelectionState();
        });

        updateSelectionState();

        $('#save-times-btn').on('click', function () {
            const selectedHours = [];
            $('#hours-grid .hour-btn.btn-primary').each(function () {
                const h = parseInt($(this).data('hour'));
                selectedHours.push({ localTime: h.toString().padStart(2, '0') + ":00:00" });
            });

            $.ajax({
                url: '/user/report/times',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(selectedHours),
                success: function () {
                    addToast({ message: 'Saved hours successfully', type: 'success' })
                },
                error: function (xhr) {
                    addToast({ message: 'Error saving times: ' + xhr.responseJSON?.error || xhr.statusText, type: "error" })
                }
            });
        });
    });
</script>