@model JobSearcher.Report.UserReportSchedule

@{
    ViewData["Title"] = "Your Report Schedule";
}


<div class="container mt-4">
    <h2>Report Schedule</h2>

    <div id="report-schedule-container">

        <div class="card mb-3 @(Model != null ? "" : "d-none")" id="card-schedule">
            <div class="card-body">
                <p><strong>Time Zone:</strong> <span id="schedule-region">@Model.TimeZoneId</span></p>
                <p><strong>Status:</strong> <span id="schedule-status">@(Model.IsActive ? "Active" : "Inactive")</span></p>

                <ul class="list-group mb-2">
                    @foreach (var time in Model.ReportTimes)
                    {
                        <li class="list-group-item">@time.LocalTime.ToString(@"hh\:mm")</li>
                    }
                    @if (!Model.ReportTimes.Any())
                    {
                        <li class="list-group-item text-muted">No report times set.</li>
                    }
                </ul>

                <div class="mt-3">
                    <div class="mb-2">
                        <label for="TimeZoneIdUpdate" class="form-label">Time Zone</label>
                        <select id="TimeZoneIdUpdate" class="form-control"></select>
                    </div>

                    <div class="form-check mb-2">
                        <input class="form-check-input" type="checkbox" id="IsActiveUpdate" @(Model?.IsActive == true ?
                                                                                                                        "checked" : "") />
                        <label class="form-check-label" for="IsActiveUpdate">Active</label>
                    </div>

                    <button id="update-schedule-btn" class="btn btn-success">Update Schedule</button>
                </div>
            </div>

            @await Html.PartialAsync("HourPicker/_HourPicker", Model.ReportTimes)
        </div>




        <div class="alert alert-info no-report-schedule @(Model != null ? "d-none" : "")">You do not have a report schedule yet.
        </div>

    </div>

    @if (Model == null)
    {
        <form id="create-schedule-form" class="mb-3">
            <div class="mb-2">
                <label for="TimeZoneId" class="form-label">Time Zone</label>
                <select id="TimeZoneId" name="TimeZoneId" class="form-control" required>


                </select>
            </div>

            <div class="form-check mb-2">
                <input class="form-check-input" type="checkbox" id="IsActive" name="IsActive" checked />
                <label class="form-check-label" for="IsActive">
                    Active
                </label>
            </div>

            <button type="submit" class="btn btn-primary">Create Schedule</button>
        </form>

    }
</div>


<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script type="text/javascript">
    document.addEventListener("DOMContentLoaded", function () {
        const browserTz = Intl.DateTimeFormat().resolvedOptions().timeZone;
        const timezones = Intl.supportedValuesOf('timeZone')
        const tzSelect = document.getElementById("TimeZoneId");
        const tzSelectUpdate = document.getElementById("TimeZoneIdUpdate");

        timezones.forEach(tz => {
            const opt = document.createElement("option");
            opt.value = tz;
            opt.text = tz;
            if (tz === browserTz) opt.selected = true;
            const secondOpt = opt.cloneNode(true)
            console.log(tzSelectUpdate)
            if(tzSelect){
                tzSelect.appendChild(opt);
            }
            if(tzSelectUpdate){
                tzSelectUpdate.appendChild(secondOpt)
            }
            
            
        });

        document.getElementById("update-schedule-btn").addEventListener("click", function () {
            const updatedTimeZone = tzSelectUpdate.value;
            const isActive = document.getElementById("IsActiveUpdate").checked;

            $.ajax({
                url: '/user/report/update',
                type: 'PATCH',
                contentType: 'application/json',
                data: JSON.stringify({ TimeZoneId: updatedTimeZone, IsActive: isActive }),
                success: function (schedule) {
                    document.getElementById("schedule-region").innerText = schedule.timeZoneId;
                    document.getElementById("schedule-status").innerText = schedule.isActive ? "Active" : "Inactive";
                },
                error: function (xhr) {
                    console.error(xhr);
                    alert('Error updating schedule: ' + xhr.responseJSON?.error || xhr.statusText);
                }
            });
        });
    })

    $(function () {
        $('#create-schedule-form').on('submit', function (e) {
            e.preventDefault();

            const $form = $(this);
            const timeZone = $form.find('#TimeZoneId').val();
            const isActive = $form.find('#IsActive').is(':checked');

            $.ajax({
                url: '/user/report/create',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ timeZoneId: timeZone, isActive: isActive }),
                success: function (schedule) {
                    $form.closest("#card-schedule").removeClass("d-none")
                    $form.closest(".no-report-schedule").addClass("d-none")
                    $form.remove();
                },
                error: function (xhr) {
                    console.log(xhr)
                    alert('Error creating schedule: ' + xhr.responseJSON?.error || xhr.statusText);
                }
            });
        });


    });
</script>