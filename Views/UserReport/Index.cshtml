@using JobSearcher.Job
@using JobSearcher.JobOpening
@using JobSearcher.UserReport
@using JobSearcher.ViewModels
@using System.Collections.Concurrent
@model UserReportsViewModel

@{
    ViewData["Title"] = "User Reports";
}

<div class="container ">
    <div class="text-center mb-5">
        <h1 class="fw-bold display-5 text-gradient">User Reports</h1>
        <p class="text-muted fs-5">View your latest job search summaries from multiple platforms.</p>
    </div>

    @if (Model == null || !Model.Reports.Any())
    {
        <div class="alert alert-info text-center shadow-sm">
            No reports available yet. Reports are generated automatically at your scheduled time.
        </div>
    }
    else
    {
        <div class="accordion report-container" id="reportsAccordion">
            @for (int r = 0; r < Model.Reports.Count; r++)
            {
                var report = Model.Reports[r].Report;
                var data = Model.Reports[r].Data;
                var isNew = !report.SeenByUser;
                var collapseId = $"collapse-{report.Id}";
                var headingId = $"heading-{report.Id}";

                <div class="accordion-item border-0 shadow-sm mb-4 rounded-3 overflow-hidden">
                    <h2 class="accordion-header" id="@headingId">
                        <button class="accordion-button collapsed d-flex justify-content-between align-items-center fw-semibold @(isNew ? "bg-light" : "")"
                                type="button"
                                data-bs-toggle="collapse"
                                data-bs-target="#@collapseId"
                                aria-expanded="false"
                                aria-controls="@collapseId"
                                data-report-id="@report.Id">
                            <div>
                                <i class="bi bi-envelope-paper me-2 text-primary"></i>
                                Report generated @report.CreatedAt.ToString("f")
                            </div>
                            @if (isNew)
                            {
                                <span class="badge bg-danger ms-2 unseen-report">New</span>
                            }
                        </button>
                    </h2>

                    <div id="@collapseId"
                         class="accordion-collapse collapse"
                         aria-labelledby="@headingId"
                         data-bs-parent="#reportsAccordion">
                        <div class="accordion-body bg-light">

                            @if (data == null || data.Count == 0)
                            {
                                <p class="text-muted">No site data available.</p>
                            }
                            else
                            {
                                <div class="accordion " id="sitesAccordion-@r">
                                    @foreach (var siteData in data)
                                    {
                                        var site = siteData.Key;
                                        var jobs = siteData.Value;

                                        <div class="accordion-item mb-3 border-0 shadow-sm rounded-3">
                                            <h2 class="accordion-header" id="site-heading-@r-@site">
                                                <button class="accordion-button collapsed bg-white fw-semibold d-flex justify-content-between"
                                                        type="button"
                                                        data-bs-toggle="collapse"
                                                        data-bs-target="#site-collapse-@r-@site"
                                                        aria-expanded="false"
                                                        aria-controls="site-collapse-@r-@site">
                                                    <span>
                                                        <i class="bi bi-globe me-2 text-secondary"></i>@site
                                                    </span>
                                                    <span class="ms-3 badge bg-secondary">
                                                    @jobs?.Count jobs</span>
                                                </button>
                                            </h2>
                                            <div id="site-collapse-@r-@site"
                                                 class="accordion-collapse collapse"
                                                 aria-labelledby="site-heading-@r-@site"
                                                 data-bs-parent="#sitesAccordion-@r">
                                                <div class="accordion-body bg-white">
                                                    @if (jobs == null || jobs.Count == 0)
                                                    {
                                                        <p class="text-muted">No jobs found for this site.</p>
                                                    }
                                                    else
                                                    {
                                                        <ul class="list-group list-group-flush">
                                                            @foreach (var job in jobs)
                                                            {
                                                                <li class="list-group-item d-flex justify-content-between align-items-start flex-wrap">
    <div class="flex-grow-1 me-3">
        <a href="@job.Link" target="_blank" class="fw-semibold text-decoration-none text-primary">
            @job.Name
        </a>
        <div class="small text-muted mt-1">@job.Description</div>

        @if (!string.IsNullOrEmpty(job.ExtensiveDescription))
        {
            var accordionId = $"accordion-{job.Link.GetHashCode()}";
            <div class="accordion mt-2" id="@accordionId">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="heading-@accordionId">
                        <button class="accordion-button collapsed p-2"
                                type="button"
                                data-bs-toggle="collapse"
                                data-bs-target="#collapse-@accordionId"
                                aria-expanded="false"
                                aria-controls="collapse-@accordionId">
                            Show Full Description
                        </button>
                    </h2>
                    <div id="collapse-@accordionId"
                         class="accordion-collapse collapse"
                         aria-labelledby="heading-@accordionId"
                         data-bs-parent="#@accordionId">
                        <div class="accordion-body p-2" style="white-space: pre-wrap; font-size: 0.9rem;">
                            @Html.Raw(job.ExtensiveDescription)
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (job.MatchToUserCv.HasValue)
        {
            var score = job.MatchToUserCv.Value; // 0..1
            string color;
            if (score < 0.4) color = "#ff4d4f";
            else if (score < 0.6) color = "#ffa500";
            else if (score < 0.8) color = "#a3d977";
            else color = "#28a745";

            <div class="mt-1" style="font-weight:bold; color:@color;">
                Match to your CV: @(score * 100)%
            </div>
        }
    </div>

    <button class="btn btn-outline-primary btn-sm analyze-btn mt-2 mt-md-0"
            data-jobname="@job.Name"
            data-jobdesc="@job.ExtensiveDescription"
            data-bs-toggle="modal"
            data-bs-target="#analyzeModal">
        Analyze
    </button>
</li>

                                                                                                                            }
                                                        </ul>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@await Html.PartialAsync("JobAnalyzeModal/_JobAnalyzeModal", Model.User)

<style>
.text-gradient {
    background: linear-gradient(90deg, #0d6efd, #6610f2);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.accordion-button:not(.collapsed) {
    background-color: #f8f9fa;
}

.unseen-report {
    background-color: red;
}


</style>

@section Scripts {
    <script>
        $(document).ready(function () {

            $(document).on('click', '.accordion-button', function () {
                var button = $(this);
                var badge = button.find('.unseen-report');
                if (!badge.hasClass('unseen-report')) return;
                console.log(button)
                var reportId = button.data('report-id');
                if (!reportId) return;

                $.ajax({
                    url: '/UserReport/MarkSeen',
                    method: 'POST',
                    data: { id: reportId },
                    success: function () {
                        button.removeClass('unseen-report');
                    },
                    error: function (e) {
                        console.error("Error marking report as seen:", e);
                    }
                });
            });
        });

    </script>
}


